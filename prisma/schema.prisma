// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

generator client {
    provider = "prisma-client-js"
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String     @id @default(cuid())
    name          String?
    email         String?    @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    wishlist      Wishlist[]
    backlog       Backlog[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model GundamKits {
    id          String     @id @default(cuid())
    name        String
    grade       String
    releaseDate DateTime?
    series      String?
    description String?
    image       String?
    price       Float
    // reviews     Review[]
    Backlog     Backlog[]
    Wishlist    Wishlist[]
}

model Backlog {
    id        String     @id @default(cuid())
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
    userId    String
    kitId     String
    user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
    kit       GundamKits @relation(fields: [kitId], references: [id], onDelete: Cascade)
}

model Wishlist {
    id        String     @id @default(cuid())
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
    userId    String
    kitId     String
    user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
    kit       GundamKits @relation(fields: [kitId], references: [id], onDelete: Cascade)
}
